# Dockerfile para Produção - Cal.com API
FROM node:18-alpine AS builder

# Define o diretório de trabalho
WORKDIR /app

# Copia os arquivos de dependências
COPY package*.json ./

# Instala as dependências
RUN npm ci --only=production && npm cache clean --force

# Copia o código fonte
COPY . .

# Remove arquivos desnecessários
RUN rm -rf node_modules/.cache && \
    rm -rf .git && \
    rm -rf docs && \
    rm -rf *.md && \
    rm -rf .env.example

# Cria usuário não-root para segurança
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Muda a propriedade dos arquivos
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expõe a porta
EXPOSE 3000

# Define variáveis de ambiente
ENV NODE_ENV=production
ENV PORT=3000
ENV HOST=0.0.0.0

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Comando para iniciar a aplicação
CMD ["node", "index.js"]
